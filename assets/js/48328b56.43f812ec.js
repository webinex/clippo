"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[886],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(g,p(p({ref:t},s),{},{components:n})):r.createElement(g,p({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,p[1]=i;for(var l=2;l<a;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Mapping",sidebar_position:5},p="Mapping",i={unversionedId:"mapping",id:"mapping",title:"Mapping",description:"By default, controller will not map results and return same model.",source:"@site/docs/mapping.md",sourceDirName:".",slug:"/mapping",permalink:"/clippo/docs/mapping",draft:!1,editUrl:"https://github.com/webinex/clippo/tree/main/docs/docs/mapping.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Mapping",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/clippo/docs/getting-started"},next:{title:"Authorization",permalink:"/clippo/docs/auth"}},c={},l=[{value:"Mapper",id:"mapper",level:2},{value:"Using public constructor",id:"using-public-constructor",level:2}],s={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mapping"},"Mapping"),(0,o.kt)("p",null,"By default, controller will not map results and return same model.",(0,o.kt)("br",{parentName:"p"}),"\n","You can override this behavior to map to your model using two ways:  "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add your own implementation of ",(0,o.kt)("inlineCode",{parentName:"li"},"IClipDtoMapper<TClip, TClipDto>")),(0,o.kt)("li",{parentName:"ol"},"Add and register your own DTO model (might have public constructor with only one argument of type TClip)")),(0,o.kt)("h2",{id:"mapper"},"Mapper"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ClipDtoMapper<Attachment, AttachmentDto> : IClipDtoMapper<Attachment, AttachmentDto>\n{\n    public async Task<AttachmentDto[]> MapAsync([NotNull] IEnumerable<Attachment> clips)\n    {\n        ....\n    }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"services\n    .AddControllers()\n    // ....\n    .AddClippoJson()\n    .AddClippoController<Attachment, AttachmentDto>() // DTO type specified as second type argument\n    .Services\n    ...\n    .AddScoped<IClipDtoMapper<Attachment, AttachmentDto>, ClipDtoMapper<Attachment, AttachmentDto>>();\n")),(0,o.kt)("h2",{id:"using-public-constructor"},"Using public constructor"),(0,o.kt)("p",null,"When you using default constructor, you define you can use your DTO model with public constructor.",(0,o.kt)("br",{parentName:"p"}),"\n","Clippo would pass Attachment instance to your public constructor.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public class AttachmentDto\n{\n    public AttachmentDto(Attachment attachment)\n    {\n        Id = attachment.AttachmentId;\n        ....\n    }\n  \n    public Guid Id { get; }\n    \n    ....\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"services\n    .AddControllers()\n    // ....\n    .AddClippoJson()\n    .AddClippoController<Attachment, AttachmentDto>() // DTO type specified as second type argument\n")))}m.isMDXComponent=!0}}]);