"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[235],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(h,i(i({ref:t},s),{},{components:r})):n.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},395:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:"Authorization",sidebar_position:8},i="Authorization",l={unversionedId:"auth",id:"auth",title:"Authorization",description:"There two approaches (you can use both):",source:"@site/docs/auth.md",sourceDirName:".",slug:"/auth",permalink:"/clippo/docs/auth",draft:!1,editUrl:"https://github.com/webinex/clippo/tree/main/docs/docs/auth.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Authorization",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Mapping",permalink:"/clippo/docs/mapping"},next:{title:"Types & Services",permalink:"/clippo/docs/types"}},c={},p=[{value:"Inteceptor",id:"inteceptor",level:2},{value:"Controller level",id:"controller-level",level:2}],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"authorization"},"Authorization"),(0,o.kt)("p",null,"There two approaches (you can use both):"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"You can add your own interceptor"),(0,o.kt)("li",{parentName:"ol"},"You can setup global authorization  ")),(0,o.kt)("p",null,"For example, user might have role Admin for attachments:  "),(0,o.kt)("h2",{id:"inteceptor"},"Inteceptor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'internal class AuthorizationInterceptor : ClippoInterceptor<Attachment>\n{\n    private readonly IRoleService _roleService;\n\n    public AuthorizationInterceptor(IRoleService roleService)\n    {\n        _roleService = roleService;\n    }\n\n    public override async Task<CodedResult<Attachment[]>> OnStoreAsync(\n        IEnumerable<StoreClipArgs> args,\n        INext<IEnumerable<StoreClipArgs>, CodedResult<Attachment[]>> next)\n    {\n        var isAdmin = await _roleService.HasAdminRole();\n        if (!isAdmin) {\n            return CodedResults.Of<Attachment[]>().Failed("NOT_ADMIN");\n        }\n\n        return await base.OnStoreAsync(args, next);\n    }\n}\n')),(0,o.kt)("p",null,"And register it:  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"return services.AddClippo<Attachment>(x =>\n{\n    x\n        ...\n        .Interceptors\n        .Add<AuthorizationInterceptor>();\n});\n")),(0,o.kt)("h2",{id:"controller-level"},"Controller level"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'const POLICY_NAME = "my_policy";\n\nservices\n    .AddControllers()\n    // ....\n    .AddClippoJson()\n    .AddClippoController<Attachment>(x => x\n        .UsePolicy(JwtBearerDefaults.AuthenticationScheme, POLICY_NAME))\n    .Services\n    // ...\n    .AddAuthorization(auth =>\n    {\n        auth.AddPolicy(POLICY_NAME, options => options\n            .RequireAuthenticatedUser()\n            .RequireRole("ADMIN"));\n    });\n')))}d.isMDXComponent=!0}}]);